type v1_0_0__1 = 
 record {
   chats: vec Chat;
   name: text;
 };
type v1_0_0 = 
 record {
   members: vec Member;
   messages: vec Message;
   name: Chat;
 };
type User = 
 service {
   addChat: (Chat) -> ();
   "empty": () -> ();
   getChats: () -> (vec Chat) query;
   getState: () -> (v1_0_0__1) query;
   getVersion: () -> (text) query;
   receiveMessage: (Message) -> ();
 };
type State = 
 record {
   members: vec Member;
   messages: vec Message;
   name: Chat;
 };
type Message = 
 record {
   content: text;
   from: Member;
 };
type Member__1 = record {name: text;};
type Member = record {name: text;};
type Chat__1 = 
 service {
   addMember: (Member__1, User) -> ();
   getMembers: () -> (vec text) query;
   getMessages: () -> (vec Message) query;
   getState: () -> (State) query;
   getVersion: () -> (ChatVersion) query;
 };
type ChatVersion = 
 variant {
   v0_0_1;
   v1_0_0;
   v1_0_1;
 };
type Chat = record {name: text;};
service : (v1_0_0) -> Chat__1
